{"ast":null,"code":"var _jsxFileName = \"/home/james/projects/panregro/frontend/src/components/LoginFormPage/index.js\",\n    _s = $RefreshSig$();\n\n// frontend/src/components/LoginFormPage/index.js\nimport React, { useState } from \"react\";\nimport * as sessionActions from \"../../store/session\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoginFormPage() {\n  _s();\n\n  const dispatch = useDispatch();\n  const sessionUser = useSelector(state => state.session.user);\n  const [credential, setCredential] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  if (sessionUser) return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 27\n  }, this);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setErrors([]);\n    return dispatch(sessionActions.login({\n      credential,\n      password\n    })).catch(async res => {\n      const data = await res.json();\n      if (data && data.errors) setErrors(data.errors);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: errors.map((error, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: error\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Username or Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: credential,\n        onChange: e => setCredential(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginFormPage, \"ACPrgNGYwU2RwrDv9vyEgZj9BtA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = LoginFormPage;\nexport default LoginFormPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginFormPage\");","map":{"version":3,"sources":["/home/james/projects/panregro/frontend/src/components/LoginFormPage/index.js"],"names":["React","useState","sessionActions","useDispatch","useSelector","Redirect","LoginFormPage","dispatch","sessionUser","state","session","user","credential","setCredential","password","setPassword","errors","setErrors","handleSubmit","e","preventDefault","login","catch","res","data","json","map","error","idx","target","value"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,KAAKC,cAAZ,MAAgC,qBAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,QAAyB,kBAAzB;;;AAEA,SAASC,aAAT,GAAyB;AAAA;;AACvB,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAMK,WAAW,GAAGJ,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACC,OAAN,CAAcC,IAA1B,CAA/B;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACe,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC,EAAD,CAApC;AAEA,MAAIO,WAAJ,EAAiB,oBAAO,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,UAAP;;AAEjB,QAAMU,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACAH,IAAAA,SAAS,CAAC,EAAD,CAAT;AACA,WAAOV,QAAQ,CAACL,cAAc,CAACmB,KAAf,CAAqB;AAAET,MAAAA,UAAF;AAAcE,MAAAA;AAAd,KAArB,CAAD,CAAR,CAAyDQ,KAAzD,CACL,MAAOC,GAAP,IAAe;AACb,YAAMC,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AACA,UAAID,IAAI,IAAIA,IAAI,CAACR,MAAjB,EAAyBC,SAAS,CAACO,IAAI,CAACR,MAAN,CAAT;AAC1B,KAJI,CAAP;AAMD,GATD;;AAWA,sBACE;AAAM,IAAA,QAAQ,EAAEE,YAAhB;AAAA,4BACE;AAAA,gBACGF,MAAM,CAACU,GAAP,CAAW,CAACC,KAAD,EAAQC,GAAR,kBACV;AAAA,kBAAeD;AAAf,SAASC,GAAT;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAA,mDAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,KAAK,EAAEhB,UAFT;AAGE,QAAA,QAAQ,EAAGO,CAAD,IAAON,aAAa,CAACM,CAAC,CAACU,MAAF,CAASC,KAAV,CAHhC;AAIE,QAAA,QAAQ;AAJV;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAeE;AAAA,0CAEE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,KAAK,EAAEhB,QAFT;AAGE,QAAA,QAAQ,EAAGK,CAAD,IAAOJ,WAAW,CAACI,CAAC,CAACU,MAAF,CAASC,KAAV,CAH9B;AAIE,QAAA,QAAQ;AAJV;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF,eAwBE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAxBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD;;GAhDQxB,a;UACUH,W,EACGC,W;;;KAFbE,a;AAkDT,eAAeA,aAAf","sourcesContent":["// frontend/src/components/LoginFormPage/index.js\nimport React, { useState } from \"react\";\nimport * as sessionActions from \"../../store/session\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\n\nfunction LoginFormPage() {\n  const dispatch = useDispatch();\n  const sessionUser = useSelector((state) => state.session.user);\n  const [credential, setCredential] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n\n  if (sessionUser) return <Redirect to=\"/\" />;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setErrors([]);\n    return dispatch(sessionActions.login({ credential, password })).catch(\n      async (res) => {\n        const data = await res.json();\n        if (data && data.errors) setErrors(data.errors);\n      }\n    );\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <ul>\n        {errors.map((error, idx) => (\n          <li key={idx}>{error}</li>\n        ))}\n      </ul>\n      <label>\n        Username or Email\n        <input\n          type=\"text\"\n          value={credential}\n          onChange={(e) => setCredential(e.target.value)}\n          required\n        />\n      </label>\n      <label>\n        Password\n        <input\n          type=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          required\n        />\n      </label>\n      <button type=\"submit\">Log In</button>\n    </form>\n  );\n}\n\nexport default LoginFormPage;\n"]},"metadata":{},"sourceType":"module"}