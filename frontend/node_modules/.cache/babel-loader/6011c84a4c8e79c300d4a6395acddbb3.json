{"ast":null,"code":"import { csrfFetch } from \"./csrf\";\nconst GET_PANTRY_ITEMS = \"items/getAllPantryItems\";\n\nconst getAllPantryItems = itemList => {\n  return {\n    type: GET_PANTRY_ITEMS,\n    payload: itemList\n  };\n};\n\nexport const getItemsByPantryId = id => async dispatch => {\n  const res = await csrfFetch(`api/items/${id}`);\n\n  if (res.ok) {\n    const itemList = await res.json();\n    dispatch(getAllPantryItems(itemList));\n  }\n};\nconst initialState = {\n  itemList: []\n};\n\nconst CreateItemsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_PANTRY_ITEMS:\n      {\n        return action.payload;\n      }\n\n    default:\n      return state;\n  }\n};\n\n_c = CreateItemsReducer;\nexport default CreateItemsReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateItemsReducer\");","map":{"version":3,"sources":["/home/james/projects/panregro/frontend/src/store/items.js"],"names":["csrfFetch","GET_PANTRY_ITEMS","getAllPantryItems","itemList","type","payload","getItemsByPantryId","id","dispatch","res","ok","json","initialState","CreateItemsReducer","state","action"],"mappings":"AAAA,SAASA,SAAT,QAA0B,QAA1B;AAEA,MAAMC,gBAAgB,GAAG,yBAAzB;;AAEA,MAAMC,iBAAiB,GAAIC,QAAD,IAAc;AACtC,SAAO;AACLC,IAAAA,IAAI,EAAEH,gBADD;AAELI,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALD;;AAOA,OAAO,MAAMG,kBAAkB,GAAIC,EAAD,IAAQ,MAAOC,QAAP,IAAoB;AAC5D,QAAMC,GAAG,GAAG,MAAMT,SAAS,CAAE,aAAYO,EAAG,EAAjB,CAA3B;;AACA,MAAIE,GAAG,CAACC,EAAR,EAAY;AACV,UAAMP,QAAQ,GAAG,MAAMM,GAAG,CAACE,IAAJ,EAAvB;AACAH,IAAAA,QAAQ,CAACN,iBAAiB,CAACC,QAAD,CAAlB,CAAR;AACD;AACF,CANM;AAQP,MAAMS,YAAY,GAAG;AAAET,EAAAA,QAAQ,EAAE;AAAZ,CAArB;;AAEA,MAAMU,kBAAkB,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBF,YAAyB;AAAA,MAAXG,MAAW;;AAC3D,UAAQA,MAAM,CAACX,IAAf;AACE,SAAKH,gBAAL;AAAuB;AACrB,eAAOc,MAAM,CAACV,OAAd;AACD;;AACD;AACE,aAAOS,KAAP;AALJ;AAOD,CARD;;KAAMD,kB;AASN,eAAeA,kBAAf","sourcesContent":["import { csrfFetch } from \"./csrf\";\n\nconst GET_PANTRY_ITEMS = \"items/getAllPantryItems\";\n\nconst getAllPantryItems = (itemList) => {\n  return {\n    type: GET_PANTRY_ITEMS,\n    payload: itemList,\n  };\n};\n\nexport const getItemsByPantryId = (id) => async (dispatch) => {\n  const res = await csrfFetch(`api/items/${id}`);\n  if (res.ok) {\n    const itemList = await res.json();\n    dispatch(getAllPantryItems(itemList));\n  }\n};\n\nconst initialState = { itemList: [] };\n\nconst CreateItemsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_PANTRY_ITEMS: {\n      return action.payload;\n    }\n    default:\n      return state;\n  }\n};\nexport default CreateItemsReducer;\n"]},"metadata":{},"sourceType":"module"}