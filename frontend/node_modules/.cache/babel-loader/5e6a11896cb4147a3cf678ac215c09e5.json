{"ast":null,"code":"var _jsxFileName = \"/home/james/projects/portfilio1/frontend/src/components/Smashboys/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Navigate } from \"react-router-dom\";\nimport \"./smashboys.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SmashBoys() {\n  _s();\n\n  const canvas = useRef(null);\n  useEffect(() => {\n    //Setup canvas background\n    const ctx = canvas.current.getContext(\"2d\");\n    const gravity = 0.2; // Sprite constructor\n\n    class Sprite {\n      constructor(_ref) {\n        let {\n          position,\n          velocity,\n          color\n        } = _ref;\n        this.position = position;\n        this.velocity = velocity;\n        this.height = 150;\n        this.width = 50;\n        this.lastkey = null;\n        this.color = color;\n        this.isAttacking = false;\n        this.attackBox = {\n          position: {\n            x: this.position.x,\n            y: this.position.y\n          },\n          width: 100,\n          height: 50\n        };\n      }\n\n      draw() {\n        ctx.fillStyle = this.color;\n        ctx.fillRect(this.position.x, this.position.y, this.width, this.height); //AttackBox\n\n        if (this.isAttacking) {\n          ctx.fillStyle = \"yellow\";\n          ctx.fillRect(this.attackBox.position.x, this.attackBox.position.y, this.attackBox.width, this.attackBox.height);\n        }\n      }\n\n      update() {\n        this.draw();\n        this.attackBox.position.x = this.position.x - this.attackBox.offset.x;\n        this.attackBox.position.y = this.position.y;\n        this.position.x += this.velocity.x;\n        this.position.y += this.velocity.y;\n\n        if (this.position.y + this.height + this.velocity.y >= 576) {\n          this.velocity.y = 0;\n        } else this.velocity.y += gravity;\n\n        if (this.position.x + this.width + this.velocity.x <= 0) {\n          this.velocity.x = 0;\n        }\n      }\n\n      attack() {\n        this.isAttacking = true;\n        setTimeout(() => {\n          this.isAttacking = false;\n        }, 100);\n      }\n\n    }\n\n    const player1 = new Sprite({\n      position: {\n        x: 0,\n        y: 0\n      },\n      velocity: {\n        x: 0,\n        y: 0\n      },\n      color: \"blue\"\n    });\n    const player2 = new Sprite({\n      position: {\n        x: 400,\n        y: 100\n      },\n      velocity: {\n        x: 0,\n        y: 0\n      },\n      color: \"red\"\n    });\n\n    const renderCanvas = () => {\n      ctx.fillStyle = \"black\";\n      ctx.fillRect(0, 0, 1024, 576);\n    };\n\n    renderCanvas();\n    const keys = {\n      a: {\n        pressed: false\n      },\n      d: {\n        pressed: false\n      },\n      w: {\n        pressed: false\n      },\n      lArrow: {\n        pressed: false\n      },\n      rArrow: {\n        pressed: false\n      },\n      uArrow: {\n        pressed: false\n      }\n    };\n\n    function animate() {\n      window.requestAnimationFrame(animate);\n      renderCanvas();\n      player1.update();\n      player2.update(); //Stop player movement in X if they're grounded\n\n      if (player1.position.y + player1.height + player1.velocity.y >= 576) player1.velocity.x = 0;\n      if (player2.position.y + player2.height + player2.velocity.y >= 576) player2.velocity.x = 0; //P1 Movement\n\n      if (keys.a.pressed && player1.lastkey === \"a\") {\n        player1.velocity.x = -5;\n      } else if (keys.d.pressed && player1.lastkey === \"d\") {\n        player1.velocity.x = 5;\n      }\n\n      if (keys.w.pressed && player1.position.y + player1.height + player1.velocity.y >= 576) {\n        player1.velocity.y = -10;\n      } //P2 Movement\n\n\n      if (keys.lArrow.pressed) {\n        player2.velocity.x = -5;\n      } else if (keys.rArrow.pressed) {\n        player2.velocity.x = 5;\n      }\n\n      if (keys.uArrow.pressed && player2.position.y + player2.height + player2.velocity.y >= 576) {\n        player2.velocity.y = -10;\n      } //Detect Collisions\n      //P1 attacks\n\n\n      if (player1.attackBox.position.x + player1.attackBox.width >= player2.position.x && player1.attackBox.position.x + player1.attackBox.width <= player2.position.x + player2.width && player1.attackBox.position.y + player1.attackBox.height >= player2.position.y && player1.attackBox.position.y <= player2.position.y + player2.height && player1.isAttacking) {\n        player1.isAttacking = false;\n      }\n\n      if (player2.attackBox.position.x + player2.attackBox.width >= player1.position.x && player2.attackBox.position.x + player2.attackBox.width <= player1.position.x + player2.width && player2.attackBox.position.y + player2.attackBox.height >= player1.position.y && player2.attackBox.position.y <= player1.position.y + player1.height && player2.isAttacking) {\n        player2.isAttacking = false;\n      }\n    }\n\n    animate();\n    window.addEventListener(\"keydown\", e => {\n      console.log(e);\n\n      switch (e.key) {\n        //player1\n        case \"d\":\n          keys.d.pressed = true;\n          player1.lastkey = \"d\";\n          break;\n\n        case \"a\":\n          keys.a.pressed = true;\n          player1.lastkey = \"a\";\n          break;\n\n        case \"w\":\n          keys.w.pressed = true;\n          break;\n\n        case \"q\":\n          player1.attack();\n          break;\n        //player2\n\n        case \"ArrowLeft\":\n          keys.lArrow.pressed = true;\n          player2.lastkey = \"lArrow\";\n          break;\n\n        case \"ArrowRight\":\n          keys.rArrow.pressed = true;\n          player2.lastkey = \"rArrow\";\n          break;\n\n        case \"ArrowUp\":\n          keys.uArrow.pressed = true;\n          break;\n      }\n    });\n    window.addEventListener(\"keyup\", e => {\n      switch (e.key) {\n        case \"d\":\n          keys.d.pressed = false;\n          break;\n\n        case \"a\":\n          keys.a.pressed = false;\n          break;\n\n        case \"w\":\n          keys.w.pressed = false;\n          break;\n        //player2\n\n        case \"ArrowLeft\":\n          keys.lArrow.pressed = false;\n          break;\n\n        case \"ArrowRight\":\n          keys.rArrow.pressed = false;\n          break;\n\n        case \"ArrowUp\":\n          keys.uArrow.pressed = false;\n          break;\n      }\n    });\n  }, [canvas]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"canvasDiv\",\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvas,\n      width: 1024,\n      height: 576\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 248,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SmashBoys, \"Iosu+jEjScFAX5hfSp9z4J61DK4=\");\n\n_c = SmashBoys;\nexport default SmashBoys;\n\nvar _c;\n\n$RefreshReg$(_c, \"SmashBoys\");","map":{"version":3,"sources":["/home/james/projects/portfilio1/frontend/src/components/Smashboys/index.js"],"names":["React","useState","useEffect","useRef","useDispatch","useSelector","Navigate","SmashBoys","canvas","ctx","current","getContext","gravity","Sprite","constructor","position","velocity","color","height","width","lastkey","isAttacking","attackBox","x","y","draw","fillStyle","fillRect","update","offset","attack","setTimeout","player1","player2","renderCanvas","keys","a","pressed","d","w","lArrow","rArrow","uArrow","animate","window","requestAnimationFrame","addEventListener","e","console","log","key"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Navigate } from \"react-router-dom\";\nimport \"./smashboys.css\";\n\nfunction SmashBoys() {\n  const canvas = useRef(null);\n\n  useEffect(() => {\n    //Setup canvas background\n    const ctx = canvas.current.getContext(\"2d\");\n\n    const gravity = 0.2;\n\n    // Sprite constructor\n    class Sprite {\n      constructor({ position, velocity, color }) {\n        this.position = position;\n        this.velocity = velocity;\n        this.height = 150;\n        this.width = 50;\n        this.lastkey = null;\n        this.color = color;\n        this.isAttacking = false;\n\n        this.attackBox = {\n          position: {\n            x: this.position.x,\n            y: this.position.y,\n          },\n          width: 100,\n          height: 50,\n        };\n      }\n      draw() {\n        ctx.fillStyle = this.color;\n        ctx.fillRect(this.position.x, this.position.y, this.width, this.height);\n\n        //AttackBox\n        if (this.isAttacking) {\n          ctx.fillStyle = \"yellow\";\n          ctx.fillRect(\n            this.attackBox.position.x,\n            this.attackBox.position.y,\n            this.attackBox.width,\n            this.attackBox.height\n        \n          );\n        }\n      }\n\n      update() {\n        this.draw();\n        this.attackBox.position.x = this.position.x - this.attackBox.offset.x;\n        this.attackBox.position.y = this.position.y;\n        this.position.x += this.velocity.x;\n        this.position.y += this.velocity.y;\n        if (this.position.y + this.height + this.velocity.y >= 576) {\n          this.velocity.y = 0;\n        } else this.velocity.y += gravity;\n\n        if (this.position.x + this.width + this.velocity.x <= 0) {\n          this.velocity.x = 0;\n        }\n      }\n      attack() {\n        this.isAttacking = true;\n        setTimeout(() => {\n          this.isAttacking = false;\n        }, 100);\n      }\n    }\n\n    const player1 = new Sprite({\n      position: {\n        x: 0,\n        y: 0,\n      },\n      velocity: { x: 0, y: 0 },\n      color: \"blue\",\n    });\n\n    const player2 = new Sprite({\n      position: {\n        x: 400,\n        y: 100,\n      },\n      velocity: { x: 0, y: 0 },\n      color: \"red\",\n    });\n\n    const renderCanvas = () => {\n      ctx.fillStyle = \"black\";\n      ctx.fillRect(0, 0, 1024, 576);\n    };\n\n    renderCanvas();\n\n    const keys = {\n      a: {\n        pressed: false,\n      },\n      d: {\n        pressed: false,\n      },\n      w: {\n        pressed: false,\n      },\n      lArrow: {\n        pressed: false,\n      },\n      rArrow: {\n        pressed: false,\n      },\n      uArrow: {\n        pressed: false,\n      },\n    };\n    function animate() {\n      window.requestAnimationFrame(animate);\n      renderCanvas();\n      player1.update();\n      player2.update();\n\n      //Stop player movement in X if they're grounded\n      if (player1.position.y + player1.height + player1.velocity.y >= 576)\n        player1.velocity.x = 0;\n      if (player2.position.y + player2.height + player2.velocity.y >= 576)\n        player2.velocity.x = 0;\n\n      //P1 Movement\n      if (keys.a.pressed && player1.lastkey === \"a\") {\n        player1.velocity.x = -5;\n      } else if (keys.d.pressed && player1.lastkey === \"d\") {\n        player1.velocity.x = 5;\n      }\n      if (\n        keys.w.pressed &&\n        player1.position.y + player1.height + player1.velocity.y >= 576\n      ) {\n        player1.velocity.y = -10;\n      }\n      //P2 Movement\n\n      if (keys.lArrow.pressed) {\n        player2.velocity.x = -5;\n      } else if (keys.rArrow.pressed) {\n        player2.velocity.x = 5;\n      }\n      if (\n        keys.uArrow.pressed &&\n        player2.position.y + player2.height + player2.velocity.y >= 576\n      ) {\n        player2.velocity.y = -10;\n      }\n      //Detect Collisions\n      //P1 attacks\n      if (\n        player1.attackBox.position.x + player1.attackBox.width >=\n          player2.position.x &&\n        player1.attackBox.position.x + player1.attackBox.width <=\n          player2.position.x + player2.width &&\n        player1.attackBox.position.y + player1.attackBox.height >=\n          player2.position.y &&\n        player1.attackBox.position.y <= player2.position.y + player2.height &&\n        player1.isAttacking\n      ) {\n        player1.isAttacking = false;\n      }\n      if (\n        player2.attackBox.position.x + player2.attackBox.width >=\n          player1.position.x &&\n        player2.attackBox.position.x + player2.attackBox.width <=\n          player1.position.x + player2.width &&\n        player2.attackBox.position.y + player2.attackBox.height >=\n          player1.position.y &&\n        player2.attackBox.position.y <= player1.position.y + player1.height &&\n        player2.isAttacking\n      ) {\n        player2.isAttacking = false;\n      }\n    }\n\n    animate();\n\n    window.addEventListener(\"keydown\", (e) => {\n      console.log(e);\n      switch (e.key) {\n        //player1\n        case \"d\":\n          keys.d.pressed = true;\n          player1.lastkey = \"d\";\n          break;\n        case \"a\":\n          keys.a.pressed = true;\n          player1.lastkey = \"a\";\n          break;\n        case \"w\":\n          keys.w.pressed = true;\n          break;\n        case \"q\":\n          player1.attack();\n          break;\n\n        //player2\n        case \"ArrowLeft\":\n          keys.lArrow.pressed = true;\n          player2.lastkey = \"lArrow\";\n          break;\n        case \"ArrowRight\":\n          keys.rArrow.pressed = true;\n          player2.lastkey = \"rArrow\";\n          break;\n        case \"ArrowUp\":\n          keys.uArrow.pressed = true;\n          break;\n      }\n    });\n    window.addEventListener(\"keyup\", (e) => {\n      switch (e.key) {\n        case \"d\":\n          keys.d.pressed = false;\n          break;\n        case \"a\":\n          keys.a.pressed = false;\n          break;\n        case \"w\":\n          keys.w.pressed = false;\n          break;\n\n        //player2\n        case \"ArrowLeft\":\n          keys.lArrow.pressed = false;\n\n          break;\n        case \"ArrowRight\":\n          keys.rArrow.pressed = false;\n\n          break;\n        case \"ArrowUp\":\n          keys.uArrow.pressed = false;\n          break;\n      }\n    });\n  }, [canvas]);\n\n  return (\n    <div className=\"canvasDiv\">\n      <canvas ref={canvas} width={1024} height={576} />\n    </div>\n  );\n}\nexport default SmashBoys;\n"]},"metadata":{},"sourceType":"module"}