{"ast":null,"code":"import { csrfFetch } from \"./csrf\";\nconst GET_USER_PANTRIES = \"pantry/getAll\";\n\nconst getAllUserPantries = pantryList => {\n  return {\n    type: GET_USER_PANTRY,\n    payload: pantryList\n  };\n};\n\nexport const getPantriesByUID = id => async dispatch => {\n  const res = await csrfFetch(`/api/pantries/${id}`);\n\n  if (res.ok) {\n    const pantryList = await res.json();\n    dispatch(getAllUserPantries(pantryList));\n  }\n};\nconst initialState = {\n  pantryList: []\n};\n\nconst CreatePantryReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_USER_PANTRIES:\n      {\n        return action.payload;\n      }\n\n    default:\n      return state;\n  }\n};\n\n_c = CreatePantryReducer;\nexport default createSessionReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePantryReducer\");","map":{"version":3,"sources":["/home/james/projects/panregro/frontend/src/store/pantry.js"],"names":["csrfFetch","GET_USER_PANTRIES","getAllUserPantries","pantryList","type","GET_USER_PANTRY","payload","getPantriesByUID","id","dispatch","res","ok","json","initialState","CreatePantryReducer","state","action","createSessionReducer"],"mappings":"AAAA,SAASA,SAAT,QAA0B,QAA1B;AAEA,MAAMC,iBAAiB,GAAG,eAA1B;;AAEA,MAAMC,kBAAkB,GAAIC,UAAD,IAAgB;AACzC,SAAO;AACLC,IAAAA,IAAI,EAAEC,eADD;AAELC,IAAAA,OAAO,EAAEH;AAFJ,GAAP;AAID,CALD;;AAOA,OAAO,MAAMI,gBAAgB,GAAIC,EAAD,IAAQ,MAAOC,QAAP,IAAoB;AAC1D,QAAMC,GAAG,GAAG,MAAMV,SAAS,CAAE,iBAAgBQ,EAAG,EAArB,CAA3B;;AACA,MAAIE,GAAG,CAACC,EAAR,EAAY;AACV,UAAMR,UAAU,GAAG,MAAMO,GAAG,CAACE,IAAJ,EAAzB;AACAH,IAAAA,QAAQ,CAACP,kBAAkB,CAACC,UAAD,CAAnB,CAAR;AACD;AACF,CANM;AAQP,MAAMU,YAAY,GAAG;AAAEV,EAAAA,UAAU,EAAE;AAAd,CAArB;;AAEA,MAAMW,mBAAmB,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBF,YAAyB;AAAA,MAAXG,MAAW;;AAC5D,UAAQA,MAAM,CAACZ,IAAf;AACE,SAAKH,iBAAL;AAAwB;AACtB,eAAOe,MAAM,CAACV,OAAd;AACD;;AACD;AACE,aAAOS,KAAP;AALJ;AAOD,CARD;;KAAMD,mB;AASN,eAAeG,oBAAf","sourcesContent":["import { csrfFetch } from \"./csrf\";\n\nconst GET_USER_PANTRIES = \"pantry/getAll\";\n\nconst getAllUserPantries = (pantryList) => {\n  return {\n    type: GET_USER_PANTRY,\n    payload: pantryList,\n  };\n};\n\nexport const getPantriesByUID = (id) => async (dispatch) => {\n  const res = await csrfFetch(`/api/pantries/${id}`);\n  if (res.ok) {\n    const pantryList = await res.json();\n    dispatch(getAllUserPantries(pantryList));\n  }\n};\n\nconst initialState = { pantryList: [] };\n\nconst CreatePantryReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_USER_PANTRIES: {\n      return action.payload;\n    }\n    default:\n      return state;\n  }\n};\nexport default createSessionReducer;\n"]},"metadata":{},"sourceType":"module"}