{"ast":null,"code":"var _jsxFileName = \"/home/james/projects/portfilio1/frontend/src/components/Smashboys/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Navigate } from \"react-router-dom\";\nimport \"./smashboys.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SmashBoys() {\n  _s();\n\n  const canvas = useRef(null);\n  useEffect(() => {\n    //Setup canvas background\n    const ctx = canvas.current.getContext(\"2d\");\n    const gravity = 0.2; // Sprite constructor\n\n    class Sprite {\n      constructor(_ref) {\n        let {\n          position,\n          velocity,\n          color,\n          facing\n        } = _ref;\n        this.position = position;\n        this.velocity = velocity;\n        this.height = 150;\n        this.width = 50;\n        this.lastkey = null;\n        this.color = color;\n        this.isAttacking = false;\n        this.facing = facing;\n        this.attackBox = {\n          position: {\n            x: this.position.x,\n            y: this.position.y\n          },\n          offset: facing === \"right\" ? {\n            x: 0,\n            y: 0\n          } : {\n            x: -50,\n            y: 0\n          },\n          width: 100,\n          height: 50\n        };\n      }\n\n      draw() {\n        ctx.fillStyle = this.color;\n        ctx.fillRect(this.position.x, this.position.y, this.width, this.height); //AttackBox\n\n        if (this.isAttacking) {\n          ctx.fillStyle = \"yellow\";\n          ctx.fillRect(this.attackBox.position.x, this.attackBox.position.y, this.attackBox.width, this.attackBox.height);\n        }\n      }\n\n      update() {\n        this.draw();\n        this.attackBox.position.x = this.position.x + (this.facing === \"right\" ? 0 : -50);\n        this.attackBox.position.y = this.position.y;\n        this.position.x += this.velocity.x;\n        this.position.y += this.velocity.y;\n\n        if (this.position.y + this.height + this.velocity.y >= 576) {\n          this.velocity.y = 0;\n        } else this.velocity.y += gravity;\n\n        if (this.position.x + this.width + this.velocity.x <= 0) {\n          this.velocity.x = 0;\n        }\n      }\n\n      attack() {\n        this.isAttacking = true;\n        setTimeout(() => {\n          this.isAttacking = false;\n        }, 100);\n      }\n\n    }\n\n    class BGSprites {\n      constructor(_ref2) {\n        let {\n          position,\n          imgSrc\n        } = _ref2;\n        this.position = position;\n        this.height = 150;\n        this.width = 50;\n        this.image = new Image();\n        this.image.src = imgSrc;\n      }\n\n      draw() {\n        ctx.drawImage(this.image, this.position.x, this.position.y);\n      }\n\n      update() {\n        this.draw();\n      }\n\n    }\n\n    const player1 = new Sprite({\n      position: {\n        x: 0,\n        y: 0\n      },\n      velocity: {\n        x: 0,\n        y: 0\n      },\n      color: \"blue\",\n      //   offset: { x: 0, y: 0 },\n      facing: \"right\"\n    });\n    const player2 = new Sprite({\n      position: {\n        x: 400,\n        y: 100\n      },\n      velocity: {\n        x: 0,\n        y: 0\n      },\n      color: \"red\",\n      //   offset: { x: -50, y: 0 },\n      facing: \"left\"\n    });\n\n    const renderCanvas = () => {\n      ctx.fillStyle = \"black\";\n      ctx.fillRect(0, 0, 1024, 576);\n    };\n\n    renderCanvas();\n    const keys = {\n      a: {\n        pressed: false\n      },\n      d: {\n        pressed: false\n      },\n      w: {\n        pressed: false\n      },\n      lArrow: {\n        pressed: false\n      },\n      rArrow: {\n        pressed: false\n      },\n      uArrow: {\n        pressed: false\n      }\n    };\n\n    function animate() {\n      window.requestAnimationFrame(animate);\n      renderCanvas();\n      player1.update();\n      player2.update(); //Stop player movement in X if they're grounded\n\n      if (player1.position.y + player1.height + player1.velocity.y >= 576) player1.velocity.x = 0;\n      if (player2.position.y + player2.height + player2.velocity.y >= 576) player2.velocity.x = 0; //P1 Movement\n\n      if (keys.a.pressed && player1.lastkey === \"a\") {\n        player1.velocity.x = -5;\n        player1.facing = \"left\";\n      } else if (keys.d.pressed && player1.lastkey === \"d\") {\n        player1.velocity.x = 5;\n        player1.facing = \"right\";\n      }\n\n      if (keys.w.pressed && player1.position.y + player1.height + player1.velocity.y >= 576) {\n        player1.velocity.y = -10;\n      } //P2 Movement\n\n\n      if (keys.lArrow.pressed) {\n        player2.velocity.x = -5;\n        player2.facing = \"left\";\n      } else if (keys.rArrow.pressed) {\n        player2.velocity.x = 5;\n        player2.facing = \"right\";\n      }\n\n      if (keys.uArrow.pressed && player2.position.y + player2.height + player2.velocity.y >= 576) {\n        player2.velocity.y = -10;\n      } //Detect Collisions\n      //P1 attacks\n\n\n      if (player1.attackBox.position.x + player1.attackBox.width >= player2.position.x && player1.attackBox.position.x + player1.attackBox.width <= player2.position.x + player2.width && player1.attackBox.position.y + player1.attackBox.height >= player2.position.y && player1.attackBox.position.y <= player2.position.y + player2.height && player1.isAttacking) {\n        player1.isAttacking = false;\n      }\n\n      if (player2.attackBox.position.x + player2.attackBox.width >= player1.position.x && player2.attackBox.position.x + player2.attackBox.width <= player1.position.x + player2.width && player2.attackBox.position.y + player2.attackBox.height >= player1.position.y && player2.attackBox.position.y <= player1.position.y + player1.height && player2.isAttacking) {\n        player2.isAttacking = false;\n      } //   console.log(player2.attackBox.offset);\n\n    }\n\n    animate();\n    window.addEventListener(\"keydown\", e => {\n      console.log(e);\n\n      switch (e.key) {\n        //player1\n        case \"d\":\n          keys.d.pressed = true;\n          player1.lastkey = \"d\";\n          break;\n\n        case \"a\":\n          keys.a.pressed = true;\n          player1.lastkey = \"a\";\n          break;\n\n        case \"w\":\n          keys.w.pressed = true;\n          break;\n\n        case \"q\":\n          player1.attack();\n          break;\n        //player2\n\n        case \"ArrowLeft\":\n          keys.lArrow.pressed = true;\n          player2.lastkey = \"lArrow\";\n          break;\n\n        case \"ArrowRight\":\n          keys.rArrow.pressed = true;\n          player2.lastkey = \"rArrow\";\n          break;\n\n        case \"ArrowUp\":\n          keys.uArrow.pressed = true;\n          break;\n\n        case \"/\":\n          player2.attack();\n          break;\n      }\n    });\n    window.addEventListener(\"keyup\", e => {\n      switch (e.key) {\n        case \"d\":\n          keys.d.pressed = false;\n          break;\n\n        case \"a\":\n          keys.a.pressed = false;\n          break;\n\n        case \"w\":\n          keys.w.pressed = false;\n          break;\n        //player2\n\n        case \"ArrowLeft\":\n          keys.lArrow.pressed = false;\n          break;\n\n        case \"ArrowRight\":\n          keys.rArrow.pressed = false;\n          break;\n\n        case \"ArrowUp\":\n          keys.uArrow.pressed = false;\n          break;\n      }\n    });\n  }, [canvas]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"canvasDiv\",\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvas,\n      width: 1024,\n      height: 576\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 299,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SmashBoys, \"Iosu+jEjScFAX5hfSp9z4J61DK4=\");\n\n_c = SmashBoys;\nexport default SmashBoys;\n\nvar _c;\n\n$RefreshReg$(_c, \"SmashBoys\");","map":{"version":3,"sources":["/home/james/projects/portfilio1/frontend/src/components/Smashboys/index.js"],"names":["React","useState","useEffect","useRef","useDispatch","useSelector","Navigate","SmashBoys","canvas","ctx","current","getContext","gravity","Sprite","constructor","position","velocity","color","facing","height","width","lastkey","isAttacking","attackBox","x","y","offset","draw","fillStyle","fillRect","update","attack","setTimeout","BGSprites","imgSrc","image","Image","src","drawImage","player1","player2","renderCanvas","keys","a","pressed","d","w","lArrow","rArrow","uArrow","animate","window","requestAnimationFrame","addEventListener","e","console","log","key"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Navigate } from \"react-router-dom\";\nimport \"./smashboys.css\";\n\nfunction SmashBoys() {\n  const canvas = useRef(null);\n\n  useEffect(() => {\n    //Setup canvas background\n    const ctx = canvas.current.getContext(\"2d\");\n\n    const gravity = 0.2;\n\n    // Sprite constructor\n    class Sprite {\n      constructor({ position, velocity, color, facing }) {\n        this.position = position;\n        this.velocity = velocity;\n        this.height = 150;\n        this.width = 50;\n        this.lastkey = null;\n        this.color = color;\n        this.isAttacking = false;\n        this.facing = facing;\n        this.attackBox = {\n          position: {\n            x: this.position.x,\n            y: this.position.y,\n          },\n          offset: facing === \"right\" ? { x: 0, y: 0 } : { x: -50, y: 0 },\n\n          width: 100,\n          height: 50,\n        };\n      }\n      draw() {\n        ctx.fillStyle = this.color;\n        ctx.fillRect(this.position.x, this.position.y, this.width, this.height);\n\n        //AttackBox\n        if (this.isAttacking) {\n          ctx.fillStyle = \"yellow\";\n          ctx.fillRect(\n            this.attackBox.position.x,\n            this.attackBox.position.y,\n            this.attackBox.width,\n            this.attackBox.height\n          );\n        }\n      }\n\n      update() {\n        this.draw();\n        this.attackBox.position.x =\n          this.position.x + (this.facing === \"right\" ? 0 : -50);\n        this.attackBox.position.y = this.position.y;\n        this.position.x += this.velocity.x;\n        this.position.y += this.velocity.y;\n\n        if (this.position.y + this.height + this.velocity.y >= 576) {\n          this.velocity.y = 0;\n        } else this.velocity.y += gravity;\n\n        if (this.position.x + this.width + this.velocity.x <= 0) {\n          this.velocity.x = 0;\n        }\n      }\n      attack() {\n        this.isAttacking = true;\n        setTimeout(() => {\n          this.isAttacking = false;\n        }, 100);\n      }\n    }\n\n\n\n class BGSprites {\n   constructor({ position, imgSrc}) {\n     this.position = position;\n     this.height = 150;\n     this.width = 50;\n     this.image = new Image()\n     this.image.src = imgSrc\n     };\n\n   draw(){\n    ctx.drawImage(this.image,this.position.x,this.position.y)\n   }\n   update() {this.draw()}\n\n }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    const player1 = new Sprite({\n      position: {\n        x: 0,\n        y: 0,\n      },\n      velocity: { x: 0, y: 0 },\n      color: \"blue\",\n      //   offset: { x: 0, y: 0 },\n      facing: \"right\",\n    });\n\n    const player2 = new Sprite({\n      position: {\n        x: 400,\n        y: 100,\n      },\n      velocity: { x: 0, y: 0 },\n      color: \"red\",\n      //   offset: { x: -50, y: 0 },\n      facing: \"left\",\n    });\n\n    const renderCanvas = () => {\n      ctx.fillStyle = \"black\";\n      ctx.fillRect(0, 0, 1024, 576);\n    };\n\n    renderCanvas();\n\n    const keys = {\n      a: {\n        pressed: false,\n      },\n      d: {\n        pressed: false,\n      },\n      w: {\n        pressed: false,\n      },\n      lArrow: {\n        pressed: false,\n      },\n      rArrow: {\n        pressed: false,\n      },\n      uArrow: {\n        pressed: false,\n      },\n    };\n    function animate() {\n      window.requestAnimationFrame(animate);\n      renderCanvas();\n      player1.update();\n      player2.update();\n\n      //Stop player movement in X if they're grounded\n      if (player1.position.y + player1.height + player1.velocity.y >= 576)\n        player1.velocity.x = 0;\n      if (player2.position.y + player2.height + player2.velocity.y >= 576)\n        player2.velocity.x = 0;\n\n      //P1 Movement\n      if (keys.a.pressed && player1.lastkey === \"a\") {\n        player1.velocity.x = -5;\n        player1.facing = \"left\";\n      } else if (keys.d.pressed && player1.lastkey === \"d\") {\n        player1.velocity.x = 5;\n        player1.facing = \"right\";\n      }\n      if (\n        keys.w.pressed &&\n        player1.position.y + player1.height + player1.velocity.y >= 576\n      ) {\n        player1.velocity.y = -10;\n      }\n      //P2 Movement\n\n      if (keys.lArrow.pressed) {\n        player2.velocity.x = -5;\n        player2.facing = \"left\";\n      } else if (keys.rArrow.pressed) {\n        player2.velocity.x = 5;\n        player2.facing = \"right\";\n      }\n      if (\n        keys.uArrow.pressed &&\n        player2.position.y + player2.height + player2.velocity.y >= 576\n      ) {\n        player2.velocity.y = -10;\n      }\n      //Detect Collisions\n      //P1 attacks\n      if (\n        player1.attackBox.position.x + player1.attackBox.width >=\n          player2.position.x &&\n        player1.attackBox.position.x + player1.attackBox.width <=\n          player2.position.x + player2.width &&\n        player1.attackBox.position.y + player1.attackBox.height >=\n          player2.position.y &&\n        player1.attackBox.position.y <= player2.position.y + player2.height &&\n        player1.isAttacking\n      ) {\n        player1.isAttacking = false;\n      }\n      if (\n        player2.attackBox.position.x + player2.attackBox.width >=\n          player1.position.x &&\n        player2.attackBox.position.x + player2.attackBox.width <=\n          player1.position.x + player2.width &&\n        player2.attackBox.position.y + player2.attackBox.height >=\n          player1.position.y &&\n        player2.attackBox.position.y <= player1.position.y + player1.height &&\n        player2.isAttacking\n      ) {\n        player2.isAttacking = false;\n      }\n      //   console.log(player2.attackBox.offset);\n    }\n\n    animate();\n\n    window.addEventListener(\"keydown\", (e) => {\n      console.log(e);\n      switch (e.key) {\n        //player1\n        case \"d\":\n          keys.d.pressed = true;\n          player1.lastkey = \"d\";\n\n          break;\n        case \"a\":\n          keys.a.pressed = true;\n          player1.lastkey = \"a\";\n          break;\n        case \"w\":\n          keys.w.pressed = true;\n          break;\n        case \"q\":\n          player1.attack();\n          break;\n\n        //player2\n        case \"ArrowLeft\":\n          keys.lArrow.pressed = true;\n          player2.lastkey = \"lArrow\";\n          break;\n        case \"ArrowRight\":\n          keys.rArrow.pressed = true;\n          player2.lastkey = \"rArrow\";\n          break;\n        case \"ArrowUp\":\n          keys.uArrow.pressed = true;\n          break;\n        case \"/\":\n          player2.attack();\n          break;\n      }\n    });\n    window.addEventListener(\"keyup\", (e) => {\n      switch (e.key) {\n        case \"d\":\n          keys.d.pressed = false;\n          break;\n        case \"a\":\n          keys.a.pressed = false;\n          break;\n        case \"w\":\n          keys.w.pressed = false;\n          break;\n\n        //player2\n        case \"ArrowLeft\":\n          keys.lArrow.pressed = false;\n\n          break;\n        case \"ArrowRight\":\n          keys.rArrow.pressed = false;\n\n          break;\n        case \"ArrowUp\":\n          keys.uArrow.pressed = false;\n          break;\n      }\n    });\n  }, [canvas]);\n\n  return (\n    <div className=\"canvasDiv\">\n      <canvas ref={canvas} width={1024} height={576} />\n    </div>\n  );\n}\nexport default SmashBoys;\n"]},"metadata":{},"sourceType":"module"}